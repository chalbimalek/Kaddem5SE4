# MySQL Deployment and Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql-container
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "kaddem"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  type: ClusterIP

# Backend Deployment and Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaddem-back-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: back-app
  template:
    metadata:
      labels:
        app: back-app
    spec:
      containers:
      - name: back-container
        image: firasab/kaddem_back:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://mysql-service:3306/kaddem?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
        - name: SPRING_DATASOURCE_USERNAME
          value: root
        - name: SPRING_DATASOURCE_PASSWORD
          value: root
        - name: SPRING_JPA_SHOW_SQL
          value: "true"
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO
          value: update
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
          value: org.hibernate.dialect.MySQL5Dialect

---
apiVersion: v1
kind: Service
metadata:
  name: back-service
spec:
  selector:
    app: back-app
  ports:
  - protocol: TCP
    port: 80         # Port exposed on the Service
    targetPort: 8080 # Port on the Pod that the Service forwards traffic to
  type: LoadBalancer  # Or NodePort depending on your environment
